{"version":3,"sources":["routes.ts","components/logo/logo.tsx","const.ts","types/action.ts","store/root-reducer.ts","store/action.ts","services/token.ts","mappers/film-mapper.ts","mappers/auth-info-mapper.ts","store/api-actions.ts","store/films-data/films-data.ts","store/user-process/user-process.ts","store/user-process/selectors.ts","components/user-block/user-block.tsx","store/films-data/selectors.ts","components/preview-video-player/preview-video-player.tsx","components/card/card.tsx","components/genres-filter/genres-filter.tsx","components/show-more-button/show-more-button.tsx","components/films-list/films-list.tsx","components/my-list-button/my-list-button.tsx","components/to-player-button/to-player-button.tsx","components/loading-screen/loading-screen.tsx","components/main/main.tsx","components/sign-in/sign-in.tsx","utils/validators.ts","components/my-list/my-list.tsx","utils.ts","components/tab-details/tab-details.tsx","components/tab-overview/tab-overview.tsx","components/tab-reviews/tab-reviews.tsx","components/tabs/tabs.tsx","components/movie-page/movie-page.tsx","components/add-review-form/add-review-form.tsx","components/add-review/add-review.tsx","hooks/use-video-player.ts","components/player-page/player-page.tsx","components/not-found/not-found.tsx","components/private-route/private-route.tsx","components/app/app.tsx","services/api.ts","browser-history.ts","store/middlewares/redirect.ts","index.tsx"],"names":["AppRoute","CreateAppRoute","Film","id","replace","String","AddReview","Player","Logo","isCenter","className","to","memo","AuthorizationStatus","ActionType","ALL_GENRES_NAME","NameSpace","changeGenre","createAction","ChangeGenre","genre","payload","loadFilms","LoadFilms","films","loadFavoriteFilms","LoadFavoriteFilms","favoriteFilms","updateFilmFavoriteStatus","UpdateFilmFavoriteStatus","isFavorite","loadReviews","LoadReviews","reviews","loadSimilarFilms","LoadSimilarFilms","similarFilms","loadPromoFilm","LoadPromoFilm","promoFilm","loadFilm","LoadFilm","film","changeShowedFilms","ChangeShowedFilms","showedFilms","requireAuthorization","RequireAuthorization","authorizationStatus","authInfo","requireLogout","RequireLogout","redirectToRoute","RedirectToRoute","url","AUTH_TOKEN_KEY_NAME","mapDataToFilm","it","name","posterImage","previewImage","backgroundImage","backgroundColor","videoLink","previewVideoLink","description","rating","scoresCount","director","starring","runTime","released","mapDataToAuthInfo","data","email","avatarUrl","token","FETCH_FAIL_MESSAGE","NO_AUTH_FAIL_MESSAGE","fetchFilmAction","dispatch","_getState","api","a","get","toast","error","initialState","activeGenre","undefined","isDataLoaded","filmsData","createReducer","builder","addCase","state","action","Unknown","userProcess","NoAuth","rootReducer","combineReducers","Data","User","getAuthorizationStatus","getAuthInfo","UserBlock","useSelector","useDispatch","Auth","MyList","src","alt","width","height","style","border","background","onClick","delete","localStorage","removeItem","Login","getFilm","getPromofilm","getFilms","getMyFilms","getReviews","getShowedFilms","getSimilarFilms","slice","getLoadedDataStatus","getGenres","concat","Array","from","Set","map","sort","getActiveGenre","PreviewVideoPlayer","poster","autoPlay","muted","useState","isPlaying","setIsPlaying","videoRef","useRef","useEffect","autoPlayTimer","setTimeout","clearTimeout","current","play","pause","ref","Card","isActive","setIsActive","onMouseMove","onMouseLeave","GenresFilter","genres","cursor","ShowMoreButton","type","FilmsList","title","showGenreFilter","filteredFilms","useMemo","filter","length","MyListButton","post","viewBox","xlinkHref","ToPlayerButton","filmId","toPlayer","useCallback","LoadingScreen","Main","SignIn","setEmail","password","setPassword","hasAttempt","setHasAttempt","isEmailValid","test","validateEmail","isPasswordValid","validatePassword","onSubmit","evt","preventDefault","setItem","Root","info","loginAction","placeholder","defaultValue","onChange","target","value","htmlFor","months","addLeadingZero","val","padStart","formatDuration","duration","hours","Math","floor","minutes","seconds","getFormatedDuration","getHoursAndMinutes","formatReviewDate","date","Date","month","getMonth","day","getDate","year","getFullYear","TabDetails","join","split","TabOverview","levelDescription","TabReviews","middleIndex","round","firstBlockReviews","secondBlockReviews","comment","user","dateTime","Tabs","location","useLocation","currentTab","hash","pathname","getTab","MoviePage","parseInt","useParams","fethcSimilarFilmsAction","_getSetate","fetchReviewsAction","AddReviewForm","setRating","setComment","addReviewBtnRef","isFormValid","review","cb","disabled","isSuccess","_","i","reverse","checked","maxLength","useVideoPlayer","videoElement","progress","timeElapsed","playerState","setPlayerState","togglePlay","handleOnTimeUpdate","currentTime","handleVideoProgress","manualChange","requestFullscreen","PlayerPage","onTimeUpdate","offsetX","clientX","currentTarget","offsetLeft","totalWidth","clientWidth","change","max","left","NotFound","padding","PrivateRoute","props","exact","path","render","routeProps","App","HttpCode","isCheckedAuth","browserHistory","createBrowserHistory","redirect","_store","next","push","onUnauthorized","notFoundCallback","axios","create","baseURL","timeout","interceptors","response","use","status","Unauthorized","Promise","reject","request","config","getItem","getToken","headers","createAPI","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","ReactDOM","StrictMode","history","document","getElementById"],"mappings":"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","file":"static/js/main.2bc11511.chunk.js","sourcesContent":["export enum AppRoute {\n  Root = '/',\n  NotFound = '/not-found',\n  Login = '/login',\n  MyList = '/mylist',\n  Film = '/films/:id',\n  AddReview = '/films/:id/review',\n  Player = '/player/:id'\n}\n\nexport const CreateAppRoute = {\n  [AppRoute.Film]: (id: number): string => AppRoute.Film.replace(':id', String(id)),\n  [AppRoute.AddReview]: (id: number): string => AppRoute.AddReview.replace(':id', String(id)),\n  [AppRoute.Player]: (id: number): string => AppRoute.Player.replace(':id', String(id)),\n};\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype LogoProps = {\n  isCenter?: boolean;\n}\n\nfunction Logo({ isCenter }: LogoProps): JSX.Element {\n  return (\n    <div className=\"logo\">\n      <Link to=\"/\" className={`logo__link${isCenter ? ' logo__link--light' : ''}`}>\n        <span className=\"logo__letter logo__letter--1\">W</span>\n        <span className=\"logo__letter logo__letter--2\">T</span>\n        <span className=\"logo__letter logo__letter--3\">W</span>\n      </Link>\n    </div>\n  );\n}\n\nexport default memo(Logo);\n","export enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nexport const FILMS_PER_STEP = 8;\n\nexport const ALL_GENRES_NAME = 'All genres';\n","import { ThunkAction } from 'redux-thunk';\nimport { AxiosInstance } from 'axios';\nimport { State } from '../types/state';\nimport { changeGenre, changeShowedFilms, loadFilms, loadSimilarFilms, loadFilm, redirectToRoute, requireAuthorization, requireLogout, loadReviews, loadFavoriteFilms, loadPromoFilm, updateFilmFavoriteStatus } from '../store/action';\n\nexport enum ActionType {\n  ChangeGenre = 'data/changeGenre',\n  LoadFilms = 'data/loadFilms',\n  LoadFavoriteFilms = 'data/loadFavoriteFilms',\n  UpdateFilmFavoriteStatus = 'data/updateFilmFavoriteStatus',\n  LoadReviews = 'data/loadReviews',\n  LoadSimilarFilms = 'data/loadSimilarFilms',\n  LoadFilm = 'data/loadFilm',\n  LoadPromoFilm = 'data/loadPromoFilm',\n  ChangeShowedFilms = 'data/changeShowedFilms',\n  RequireAuthorization = 'user/requireAuthorization',\n  RequireLogout = 'user/requireLogout',\n  RedirectToRoute = 'main/redirectToRoute',\n}\n\nexport type Actions =\n  | ReturnType<typeof changeGenre>\n  | ReturnType<typeof changeShowedFilms>\n  | ReturnType<typeof loadFilms>\n  | ReturnType<typeof loadFavoriteFilms>\n  | ReturnType<typeof updateFilmFavoriteStatus>\n  | ReturnType<typeof loadReviews>\n  | ReturnType<typeof loadSimilarFilms>\n  | ReturnType<typeof loadFilm>\n  | ReturnType<typeof requireAuthorization>\n  | ReturnType<typeof requireLogout>\n  | ReturnType<typeof redirectToRoute>\n  | ReturnType<typeof loadPromoFilm>;\n\nexport type ThunkActionResult<R = Promise<void>> = ThunkAction<R, State, AxiosInstance, Actions>;\n","import { combineReducers } from 'redux';\nimport { filmsData } from './films-data/films-data';\nimport { userProcess } from './user-process/user-process';\n\nexport enum NameSpace {\n  Data = 'DATA',\n  User = 'USER',\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.Data]: filmsData,\n  [NameSpace.User]: userProcess,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { AuthorizationStatus } from '../const';\nimport { AppRoute } from '../routes';\nimport { ActionType } from '../types/action';\nimport { Film, Films } from '../types/film';\nimport { AuthInfo } from '../types/auth-info';\nimport { Reviews } from '../types/review';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const changeGenre = createAction(\n  ActionType.ChangeGenre,\n  (genre: string) => ({\n    payload: genre,\n  }),\n);\n\nexport const loadFilms = createAction(\n  ActionType.LoadFilms,\n  (films: Films) => ({\n    payload: {\n      films,\n    },\n  }),\n);\n\nexport const loadFavoriteFilms = createAction(\n  ActionType.LoadFavoriteFilms,\n  (favoriteFilms: Films) => ({\n    payload: {\n      favoriteFilms,\n    },\n  }),\n);\n\nexport const updateFilmFavoriteStatus = createAction(\n  ActionType.UpdateFilmFavoriteStatus,\n  (id: number, isFavorite: boolean) => ({\n    payload: {\n      id,\n      isFavorite,\n    },\n  }),\n);\n\nexport const loadReviews = createAction(\n  ActionType.LoadReviews,\n  (reviews: Reviews) => ({\n    payload: {\n      reviews,\n    },\n  }),\n);\n\nexport const loadSimilarFilms = createAction(\n  ActionType.LoadSimilarFilms,\n  (similarFilms: Films) => ({\n    payload: {\n      similarFilms,\n    },\n  }),\n);\n\nexport const loadPromoFilm = createAction(\n  ActionType.LoadPromoFilm,\n  (promoFilm: Film) => ({\n    payload: {\n      promoFilm,\n    },\n  }),\n);\n\nexport const loadFilm = createAction(\n  ActionType.LoadFilm,\n  (film: Film) => ({\n    payload: {\n      film,\n    },\n  }),\n);\n\nexport const changeShowedFilms = createAction(\n  ActionType.ChangeShowedFilms,\n  (showedFilms: number) => ({\n    payload: showedFilms,\n  }),\n);\n\nexport const requireAuthorization = createAction(\n  ActionType.RequireAuthorization,\n  (authorizationStatus: AuthorizationStatus, authInfo?: AuthInfo) => ({\n    payload: {\n      authorizationStatus,\n      authInfo,\n    },\n  }),\n);\n\nexport const requireLogout = createAction(ActionType.RequireLogout);\n\nexport const redirectToRoute = createAction(\n  ActionType.RedirectToRoute,\n  (url: AppRoute | string) => ({\n    payload: url,\n  }),\n);\n","const AUTH_TOKEN_KEY_NAME = 'what-to-watch-token';\n\nexport type Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nexport const saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","import { ApiResponse } from '../store/api-actions';\nimport { Film } from '../types/film';\n\nexport const mapDataToFilm = (it: ApiResponse): Film => ({\n  id: it['id'] as number,\n  name: it['name'] as string,\n  posterImage: it['poster_image'] as string,\n  previewImage: it['preview_image'] as string,\n  backgroundImage: it['background_image'] as string,\n  backgroundColor: it['background_color'] as string,\n  videoLink: it['video_link'] as string,\n  previewVideoLink: it['preview_video_link'] as string,\n  description: it['description'] as string,\n  rating: it['rating'] as number,\n  scoresCount: it['scores_count'] as number,\n  director: it['director'] as string,\n  starring: it['starring'] as string[],\n  runTime: it['run_time'] as number,\n  genre: it['genre'] as string,\n  released: it['released'] as number,\n  isFavorite: it['is_favorite'] as boolean,\n}) as Film;\n","import { ApiResponse } from '../store/api-actions';\nimport { AuthInfo } from '../types/auth-info';\n\nexport const mapDataToAuthInfo = (data: ApiResponse): AuthInfo | undefined => data && ({\n  id: data['id'] as number,\n  name: data['name'] as string,\n  email: data['email'] as string,\n  avatarUrl: data['avatar_url'] as string,\n  token: data['token'] as string,\n}) as AuthInfo;\n","import { ThunkActionResult } from '../types/action';\nimport { loadFavoriteFilms, loadFilm, loadFilms, loadPromoFilm, loadReviews, loadSimilarFilms, redirectToRoute, requireAuthorization, requireLogout, updateFilmFavoriteStatus } from './action';\nimport { saveToken, dropToken } from '../services/token';\nimport { AuthorizationStatus } from '../const';\nimport { AuthData } from '../types/auth-data';\nimport { AppRoute } from '../routes';\nimport { mapDataToFilm } from '../mappers/film-mapper';\nimport { mapDataToAuthInfo } from '../mappers/auth-info-mapper';\nimport { Reviews } from '../types/review';\nimport { AddReview } from '../types/add-review';\nimport { toast } from 'react-toastify';\n\nconst FETCH_FAIL_MESSAGE = 'Ошибка загрузки данных с сервера. Попробуйте позже.';\nconst NO_AUTH_FAIL_MESSAGE = 'Не забудьте авторизоваться';\nconst AUTH_FAIL_MESSAGE = 'При авторизации возникла ошибка. Попробуйте позже.';\nconst LOGOUT_FAIL_MESSAGE = 'При выходе из системы возникла ошибка. Попробуйте позже.';\n\ntype ResponseValueType = string | string[] | number | boolean;\nexport type ApiResponse = Record<string, ResponseValueType | Record<string, ResponseValueType>>;\n\nexport const fetchPromoAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.get<ApiResponse>('/promo');\n      dispatch(loadPromoFilm(mapDataToFilm(data)));\n    } catch {\n      toast.error(FETCH_FAIL_MESSAGE);\n    }\n  };\n\nexport const fetchFilmsAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.get<ApiResponse[]>('/films');\n      dispatch(loadFilms(data.map((it) => mapDataToFilm(it))));\n    } catch {\n      toast.error(FETCH_FAIL_MESSAGE);\n    }\n  };\n\nexport const fetchFavoriteFilmsAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.get<ApiResponse[]>('/favorite');\n      dispatch(loadFavoriteFilms(data.map((it) => mapDataToFilm(it))));\n    } catch {\n      toast.error(FETCH_FAIL_MESSAGE);\n    }\n  };\n\nexport const fethcSimilarFilmsAction = (id: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.get<ApiResponse[]>(`/films/${id}/similar`);\n      dispatch(loadSimilarFilms(data.map((it) => mapDataToFilm(it)).filter((it) => it.id !== id)));\n    } catch {\n      toast.error(FETCH_FAIL_MESSAGE);\n    }\n  };\n\nexport const fetchReviewsAction = (id: number): ThunkActionResult =>\n  async (dispatch, _getSetate, api): Promise<void> => {\n    try {\n      const { data } = await api.get<Reviews>(`/comments/${id}`);\n      dispatch(loadReviews(data));\n    }\n    catch {\n      toast.error(FETCH_FAIL_MESSAGE);\n    }\n  };\n\nexport const fetchFilmAction = (id: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.get<ApiResponse>(`/films/${id}`);\n      dispatch(loadFilm(mapDataToFilm(data)));\n    } catch {\n      toast.error(FETCH_FAIL_MESSAGE);\n    }\n  };\n\nexport const addReviewAction = (id: number, review: AddReview, cb: (isSuccess: boolean) => void): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.post<Reviews>(`/comments/${id}`, review);\n      dispatch(loadReviews(data));\n      toast.info('Отзыв успешно добавлен');\n      cb(true);\n    } catch {\n      toast.error('Ошибка при отправке отзыва.');\n      cb(false);\n    }\n  };\n\nexport const changeFilmFavoriteStatus = (id: number, isFavorite: boolean): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.post<ApiResponse>(`/favorite/${id}/${isFavorite ? 1 : 0}`);\n      const film = mapDataToFilm(data);\n      dispatch(updateFilmFavoriteStatus(film.id, film.isFavorite));\n    } catch {\n      toast.error(FETCH_FAIL_MESSAGE);\n    }\n  };\n\nexport const checkAuthAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      const { data } = await api.get<ApiResponse>('/login');\n      const authInfo = mapDataToAuthInfo(data);\n      const authorizationStatus = authInfo ? AuthorizationStatus.Auth : AuthorizationStatus.NoAuth;\n      dispatch(requireAuthorization(authorizationStatus, authInfo));\n      if (authorizationStatus !== AuthorizationStatus.Auth) {\n        toast.info(NO_AUTH_FAIL_MESSAGE);\n      }\n    } catch {\n      toast.info(NO_AUTH_FAIL_MESSAGE);\n    }\n  };\n\nexport const loginAction = ({ email, password }: AuthData): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      const { data } = await api.post<ApiResponse>('/login', { email, password });\n      const authInfo = mapDataToAuthInfo(data);\n      if (authInfo) {\n        saveToken(authInfo.token);\n        dispatch(requireAuthorization(AuthorizationStatus.Auth, authInfo));\n      }\n\n      dispatch(redirectToRoute(AppRoute.Root));\n    } catch {\n      toast.info(AUTH_FAIL_MESSAGE);\n    }\n  };\n\nexport const logoutAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    try {\n      await api.delete('/logout');\n      dropToken();\n      dispatch(requireLogout());\n    } catch {\n      toast.error(LOGOUT_FAIL_MESSAGE);\n    }\n  };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { ALL_GENRES_NAME } from '../../const';\nimport { FilmsData } from '../../types/state';\nimport { changeGenre, changeShowedFilms, loadFavoriteFilms, loadFilm, loadFilms, loadPromoFilm, loadReviews, loadSimilarFilms, updateFilmFavoriteStatus } from '../action';\n\nconst initialState: FilmsData = {\n  activeGenre: ALL_GENRES_NAME,\n  films: [],\n  favoriteFilms: [],\n  reviews: [],\n  similarFilms: [],\n  film: undefined,\n  promoFilm: undefined,\n  showedFilms: 0,\n  isDataLoaded: false,\n};\n\nconst filmsData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeGenre, (state, action) => {\n      state.activeGenre = action.payload;\n    })\n    .addCase(loadFilms, (state, action) => {\n      state.films = action.payload.films;\n      state.isDataLoaded = true;\n    })\n    .addCase(loadFavoriteFilms, (state, action) => {\n      state.favoriteFilms = action.payload.favoriteFilms;\n      state.isDataLoaded = true;\n    })\n    .addCase(loadFilm, (state, action) => {\n      state.film = action.payload.film;\n    })\n    .addCase(updateFilmFavoriteStatus, (state, action) => {\n      if (state.film?.id === action.payload.id) {\n        state.film.isFavorite = action.payload.isFavorite;\n      }\n\n      if (state.promoFilm?.id === action.payload.id) {\n        state.promoFilm.isFavorite = action.payload.isFavorite;\n      }\n    })\n    .addCase(loadSimilarFilms, (state, action) => {\n      state.similarFilms = action.payload.similarFilms;\n    })\n    .addCase(loadReviews, (state, action) => {\n      state.reviews = action.payload.reviews;\n    })\n    .addCase(loadPromoFilm, (state, action) => {\n      state.promoFilm = action.payload.promoFilm;\n    })\n    .addCase(changeShowedFilms, (state, action) => {\n      state.showedFilms = action.payload;\n    });\n});\n\nexport { filmsData };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { requireAuthorization, requireLogout } from '../action';\nimport { UserProcess } from '../../types/state';\nimport { AuthorizationStatus } from '../../const';\n\nconst initialState: UserProcess = {\n  authorizationStatus: AuthorizationStatus.Unknown,\n  authInfo: undefined,\n};\n\nconst userProcess = createReducer(initialState, (builder) => {\n  builder\n    .addCase(requireAuthorization, (state, action) => {\n      state.authorizationStatus = action.payload.authorizationStatus;\n      state.authInfo = action.payload.authInfo;\n    })\n    .addCase(requireLogout, (state) => {\n      state.authorizationStatus = AuthorizationStatus.NoAuth;\n      state.authInfo = undefined;\n    });\n});\n\nexport { userProcess };\n","import { AuthorizationStatus } from '../../const';\nimport { AuthInfo } from '../../types/auth-info';\nimport { State } from '../../types/state';\nimport { NameSpace } from '../root-reducer';\n\nexport const getAuthorizationStatus = (state: State): AuthorizationStatus => state[NameSpace.User].authorizationStatus;\nexport const getAuthInfo = (state: State): AuthInfo | undefined => state[NameSpace.User].authInfo;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AuthorizationStatus } from '../../const';\nimport { AppRoute } from '../../routes';\nimport { logoutAction } from '../../store/api-actions';\nimport { getAuthInfo, getAuthorizationStatus } from '../../store/user-process/selectors';\n\nfunction UserBlock(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const authInfo = useSelector(getAuthInfo);\n  const dispatch = useDispatch();\n\n  if (authorizationStatus === AuthorizationStatus.Auth) {\n    return (\n      <ul className=\"user-block\">\n        <li className=\"user-block__item\">\n          <div className=\"user-block__avatar\">\n            <Link to={AppRoute.MyList}>\n              <img src={authInfo?.avatarUrl ?? 'img/avatar.jpg'} alt=\"User avatar\" width=\"63\" height=\"63\" />\n            </Link>\n          </div>\n        </li>\n        <li className=\"user-block__item\">\n          <button className=\"user-block__link\" style={{ border: 'none', background: 'none' }} onClick={() => dispatch(logoutAction())}>Sign out</button>\n        </li>\n      </ul>\n    );\n  }\n\n  return (\n    <ul className=\"user-block\">\n      <Link className=\"user-block__link\" to={AppRoute.Login}>Sign in</Link>\n    </ul>\n  );\n}\n\nexport default UserBlock;\n","import { ALL_GENRES_NAME } from '../../const';\nimport { Film, Films } from '../../types/film';\nimport { Reviews } from '../../types/review';\nimport { State } from '../../types/state';\nimport { NameSpace } from '../root-reducer';\n\nexport const getFilm = (state: State): Film | undefined => state[NameSpace.Data].film;\nexport const getPromofilm = (state: State): Film => state[NameSpace.Data].promoFilm || {} as Film;\nexport const getFilms = (state: State): Films => state[NameSpace.Data].films;\nexport const getMyFilms = (state: State): Films => state[NameSpace.Data].favoriteFilms;\nexport const getReviews = (state: State): Reviews => state[NameSpace.Data].reviews;\nexport const getShowedFilms = (state: State): number => state[NameSpace.Data].showedFilms;\nexport const getSimilarFilms = (state: State): Films => state[NameSpace.Data].similarFilms.slice(0, 4);\nexport const getLoadedDataStatus = (state: State): boolean => state[NameSpace.Data].isDataLoaded;\nexport const getGenres = (state: State): string[] => [ALL_GENRES_NAME].concat(Array.from(new Set(state[NameSpace.Data].films.map((film) => film.genre))).sort().slice(0, 9));\nexport const getActiveGenre = (state: State): string => state[NameSpace.Data].activeGenre;\n","import { useEffect, useRef, useState } from 'react';\n\ntype PreviewVideoPlayerProps = {\n  src: string;\n  poster?: string;\n  autoPlay?: boolean;\n  muted?: boolean;\n  width?: string | number;\n  height?: string | number;\n};\n\nfunction PreviewVideoPlayer({ src, poster, autoPlay, muted, width, height }: PreviewVideoPlayerProps): JSX.Element {\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  useEffect(() => {\n    if (autoPlay) {\n      const autoPlayTimer = setTimeout(() => setIsPlaying(true), 1000);\n      return () => {\n        clearTimeout(autoPlayTimer);\n      };\n    }\n  }, [autoPlay]);\n\n  useEffect(() => {\n    if (videoRef.current === null) {\n      return;\n    }\n\n    if (isPlaying) {\n      videoRef.current.play();\n      return;\n    }\n\n    videoRef.current.pause();\n  }, [isPlaying]);\n\n  return (\n    <video muted={muted} poster={poster} width={width} height={height} ref={videoRef}>\n      <source src={src}></source>\n    </video>\n  );\n}\n\nexport default PreviewVideoPlayer;\n","import { memo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppRoute, CreateAppRoute } from '../../routes';\nimport { redirectToRoute } from '../../store/action';\nimport { Film } from '../../types/film';\nimport PreviewVideoPlayer from '../preview-video-player/preview-video-player';\n\ntype CardProps = {\n  film: Film;\n}\n\nfunction Card({ film }: CardProps): JSX.Element {\n  const [isActive, setIsActive] = useState(false);\n  const dispatch = useDispatch();\n\n  return (\n    <article className=\"small-film-card catalog__films-card\" onMouseMove={() => setIsActive(true)} onMouseLeave={() => setIsActive(false)}>\n      <div className=\"small-film-card__image\" onClick={() => dispatch(redirectToRoute(CreateAppRoute[AppRoute.Film](film.id)))}>\n        {isActive ? <PreviewVideoPlayer src={film.previewVideoLink} poster={film.previewImage} muted autoPlay width=\"100%\" height=\"auto\" /> :\n          <img src={film.previewImage} alt={film.name} width=\"280\" height=\"175\" />}\n      </div>\n      <h3 className=\"small-film-card__title\">\n        <Link className=\"small-film-card__link\" to={CreateAppRoute[AppRoute.Film](film.id)}>{film.name}</Link>\n      </h3>\n    </article>\n  );\n}\n\nexport default memo(Card);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FILMS_PER_STEP } from '../../const';\nimport { changeGenre, changeShowedFilms } from '../../store/action';\nimport { getActiveGenre, getGenres } from '../../store/films-data/selectors';\n\nfunction GenresFilter(): JSX.Element {\n  const genres = useSelector(getGenres);\n  const activeGenre = useSelector(getActiveGenre);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className=\"catalog__genres-list\">\n      {genres.map((genre) => (\n        <li key={genre} className={`catalog__genres-item${genre === activeGenre ? ' catalog__genres-item--active' : ''}`} onClick={() => {\n          if (activeGenre !== genre) {\n            dispatch(changeGenre(genre));\n            dispatch(changeShowedFilms(FILMS_PER_STEP));\n          }\n        }}\n        >\n          <span className=\"catalog__genres-link\" style={{cursor: 'pointer'}}>{genre}</span>\n        </li>))}\n    </ul>\n  );\n}\n\nexport default GenresFilter;\n","import { MouseEventHandler } from 'react';\n\ntype ShowMoreButtonProps = {\n  onClick?: MouseEventHandler<HTMLButtonElement>\n}\n\nfunction ShowMoreButton({ onClick } : ShowMoreButtonProps): JSX.Element {\n  return (\n    <div className=\"catalog__more\">\n      <button className=\"catalog__button\" type=\"button\" onClick={onClick}>Show more</button>\n    </div>\n  );\n}\n\nexport default ShowMoreButton;\n","import { memo, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ALL_GENRES_NAME, FILMS_PER_STEP } from '../../const';\nimport { changeShowedFilms } from '../../store/action';\nimport { getActiveGenre, getShowedFilms } from '../../store/films-data/selectors';\nimport { Film } from '../../types/film';\nimport Card from '../card/card';\nimport GenresFilter from '../genres-filter/genres-filter';\nimport ShowMoreButton from '../show-more-button/show-more-button';\n\ntype FilmsListProps = {\n  className?: string,\n  films: Film[],\n  title?: string,\n  showGenreFilter?: boolean\n}\n\nfunction FilmsList({ className, films, title, showGenreFilter }: FilmsListProps): JSX.Element {\n  const showedFilms = useSelector(getShowedFilms);\n  const dispatch = useDispatch();\n\n  const activeGenre = useSelector(getActiveGenre);\n\n  const filteredFilms = useMemo(() => {\n    if (activeGenre === ALL_GENRES_NAME) {\n      return films;\n    }\n    return films.filter((film) => film.genre === activeGenre);\n  }, [activeGenre, films]);\n\n  return (\n    <section className={className ? `catalog ${className}` : 'catalog'}>\n      {title ? <h2 className=\"catalog__title\">{title}</h2> : <h2 className=\"catalog__title visually-hidden\">Catalog</h2>}\n      {showGenreFilter && <GenresFilter />}\n      <div className=\"catalog__films-list\">\n        {filteredFilms.slice(0, showedFilms).map((film) => <Card key={film.id} film={film} />)}\n      </div>\n      {(showedFilms < filteredFilms.length) && <ShowMoreButton onClick={() => dispatch(changeShowedFilms(showedFilms + FILMS_PER_STEP))} />}\n    </section>\n  );\n}\n\nexport default memo(FilmsList);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { AuthorizationStatus } from '../../const';\nimport { changeFilmFavoriteStatus } from '../../store/api-actions';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\nimport { Film } from '../../types/film';\n\ntype MyListButtonProps = {\n  film: Film\n}\n\nfunction MyListButton({ film }: MyListButtonProps): JSX.Element | null {\n\n  const dispatch = useDispatch();\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  if (authorizationStatus === AuthorizationStatus.Auth) {\n    return (\n      <button className=\"btn btn--list film-card__button\" type=\"button\" onClick={() => dispatch(changeFilmFavoriteStatus(film.id, !film.isFavorite))}>\n        {film.isFavorite ?\n          <svg viewBox=\"0 0 18 14\" width=\"18\" height=\"14\">\n            <use xlinkHref=\"#in-list\"></use>\n          </svg>\n          :\n          <svg viewBox=\"0 0 19 20\" width=\"19\" height=\"20\">\n            <use xlinkHref=\"#add\"></use>\n          </svg>}\n        <span>My list</span>\n      </button>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default MyListButton;\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppRoute, CreateAppRoute } from '../../routes';\nimport { redirectToRoute } from '../../store/action';\n\ntype ToPlayerButtonProps = {\n  filmId: number,\n};\n\nfunction ToPlayerButton({ filmId }: ToPlayerButtonProps): JSX.Element {\n\n  const dispatch = useDispatch();\n  const toPlayer = useCallback(() => {\n    dispatch(redirectToRoute(CreateAppRoute[AppRoute.Player](filmId)));\n  }, [dispatch, filmId]);\n\n  return (\n    <button className=\"btn btn--play film-card__button\" type=\"button\" onClick={toPlayer}>\n      <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n        <use xlinkHref=\"#play-s\"></use>\n      </svg>\n      <span>Play</span>\n    </button>\n  );\n}\n\nexport default ToPlayerButton;\n","import './loading-screen.css';\n\nfunction LoadingScreen(): JSX.Element {\n  return (\n    <div className=\"loading-page\"><div className=\"loading\"></div></div>\n  );\n}\n\nexport default LoadingScreen;\n","import Logo from '../logo/logo';\nimport { memo, useEffect } from 'react';\nimport UserBlock from '../user-block/user-block';\nimport FilmsList from '../films-list/films-list';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilms, getLoadedDataStatus, getPromofilm } from '../../store/films-data/selectors';\nimport { changeShowedFilms } from '../../store/action';\nimport { FILMS_PER_STEP } from '../../const';\nimport MyListButton from '../my-list-button/my-list-button';\nimport ToPlayerButton from '../to-player-button/to-player-button';\nimport { fetchFilmsAction, fetchPromoAction } from '../../store/api-actions';\nimport LoadingScreen from '../loading-screen/loading-screen';\n\nfunction Main(): JSX.Element {\n  const isDataLoaded = useSelector(getLoadedDataStatus);\n  const promoFilm = useSelector(getPromofilm);\n  const films = useSelector(getFilms);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!promoFilm?.id) {\n      dispatch(fetchPromoAction());\n    }\n\n    if (!isDataLoaded) {\n      dispatch(fetchFilmsAction());\n    }\n  }, [dispatch, promoFilm?.id, isDataLoaded]);\n\n  useEffect(() => {\n    dispatch(changeShowedFilms(FILMS_PER_STEP));\n  }, [dispatch]);\n\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n  return (\n    <>\n      <section className=\"film-card\">\n        <div className=\"film-card__bg\">\n          <img src={promoFilm.backgroundImage} alt={promoFilm.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header film-card__head\">\n          <Logo />\n\n          <UserBlock />\n        </header>\n\n        <div className=\"film-card__wrap\">\n          <div className=\"film-card__info\">\n            <div className=\"film-card__poster\">\n              <img src={promoFilm.posterImage} alt={`${promoFilm.name} poster`} width=\"218\" height=\"327\" />\n            </div>\n\n            <div className=\"film-card__desc\">\n              <h2 className=\"film-card__title\">{promoFilm.name}</h2>\n              <p className=\"film-card__meta\">\n                <span className=\"film-card__genre\">{promoFilm.genre}</span>\n                <span className=\"film-card__year\">{promoFilm.released}</span>\n              </p>\n\n              <div className=\"film-card__buttons\">\n                <ToPlayerButton filmId={promoFilm.id} />\n                <MyListButton film={promoFilm} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <div className=\"page-content\">\n        <FilmsList films={films} showGenreFilter />\n        <footer className=\"page-footer\">\n          <Logo isCenter />\n\n          <div className=\"copyright\">\n            <p>© 2019 What to watch Ltd.</p>\n          </div>\n        </footer>\n      </div>\n    </>\n  );\n}\n\nexport default memo(Main);\n","import { FormEvent, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginAction } from '../../store/api-actions';\nimport { validateEmail, validatePassword } from '../../utils/validators';\nimport Logo from '../logo/logo';\n\nfunction SignIn(): JSX.Element {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [hasAttempt, setHasAttempt] = useState(false);\n\n  const isEmailValid = useMemo(() => validateEmail(email), [email]);\n  const isPasswordValid = useMemo(() => validatePassword(password), [password]);\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    setHasAttempt(true);\n    if (isEmailValid && isPasswordValid) {\n      dispatch(loginAction({\n        email,\n        password,\n      }));\n    }\n  };\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <Logo />\n\n        <h1 className=\"page-title user-page__title\">Sign in</h1>\n      </header>\n\n      <div className=\"sign-in user-page__content\">\n        <form action=\"#\" className=\"sign-in__form\" onSubmit={handleSubmit}>\n          {hasAttempt && !isEmailValid &&\n            <div className=\"sign-in__message\">\n              <p>Please enter a valid email address</p>\n            </div>}\n          {hasAttempt && !isPasswordValid &&\n            <div className=\"sign-in__message\">\n              <p>Please enter a valid password</p>\n            </div>}\n          <div className=\"sign-in__fields\">\n            <div className={`sign-in__field ${hasAttempt && !isEmailValid && 'sign-in__field--error'}`}>\n              <input className=\"sign-in__input\" type=\"email\" placeholder=\"Email address\" name=\"user-email\" id=\"user-email\" defaultValue={email} onChange={(evt) => setEmail(evt.target.value)} />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-email\">Email address</label>\n            </div>\n            <div className={`sign-in__field ${hasAttempt && !isPasswordValid && 'sign-in__field--error'}`}>\n              <input className=\"sign-in__input\" type=\"password\" placeholder=\"Password\" name=\"user-password\" id=\"user-password\" defaultValue={password} onChange={(evt) => setPassword(evt.target.value)} />\n              <label className=\"sign-in__label visually-hidden\" htmlFor=\"user-password\">Password</label>\n            </div>\n          </div>\n          <div className=\"sign-in__submit\">\n            <button className=\"sign-in__btn\" type=\"submit\">Sign in</button>\n          </div>\n        </form>\n      </div>\n\n      <footer className=\"page-footer\">\n        <Logo isCenter />\n\n        <div className=\"copyright\">\n          <p>© 2019 What to watch Ltd.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default SignIn;\n","export const validateEmail = (email: string): boolean => /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2})+$/.test(email);\n\nexport const validatePassword = (password: string): boolean => /[a-zA-Z]+/.test(password) && /[0-9]+/.test(password);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FILMS_PER_STEP } from '../../const';\nimport { changeShowedFilms } from '../../store/action';\nimport { fetchFavoriteFilmsAction } from '../../store/api-actions';\nimport { getLoadedDataStatus, getMyFilms } from '../../store/films-data/selectors';\nimport FilmsList from '../films-list/films-list';\nimport Logo from '../logo/logo';\nimport UserBlock from '../user-block/user-block';\n\n\nfunction MyList(): JSX.Element {\n  const isDataLoaded = useSelector(getLoadedDataStatus);\n  const favoriteFilms = useSelector(getMyFilms);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isDataLoaded) {\n      dispatch(fetchFavoriteFilmsAction());\n    }\n  }, [dispatch, isDataLoaded]);\n\n  useEffect(() => {\n    dispatch(changeShowedFilms(FILMS_PER_STEP));\n  }, [dispatch]);\n\n  return (\n    <div className=\"user-page\">\n      <header className=\"page-header user-page__head\">\n        <Logo />\n\n        <h1 className=\"page-title user-page__title\">My list</h1>\n\n        <UserBlock />\n      </header>\n\n      <FilmsList films={favoriteFilms} />\n\n      <footer className=\"page-footer\">\n        <Logo isCenter />\n\n        <div className=\"copyright\">\n          <p>© 2019 What to watch Ltd.</p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default MyList;\n","import { AuthorizationStatus } from './const';\n\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nconst getHoursAndMinutes = (duration: number) => {\n  const hours = Math.floor(duration / 60);\n  const minutes = duration % 60;\n\n  return { hours, minutes };\n};\n\nconst addLeadingZero = (val: number) => String(val).padStart(2, '0');\n\nexport const formatDuration = (duration: number): string => {\n  const hours = Math.floor(duration / 3600);\n  const minutes = Math.floor((duration % 3600) / 60);\n  const seconds = Math.floor(duration % 60);\n  if (hours === 0 && minutes === 0 && seconds === 0) {\n    return '00:00';\n  }\n\n  return hours > 0\n    ? `-${addLeadingZero(hours)}:${addLeadingZero(minutes)}:${addLeadingZero(seconds)}`\n    : `-${addLeadingZero(minutes)}:${addLeadingZero(seconds)}`;\n};\n\nexport const getFormatedDuration = (duration: number): string => {\n  const { hours, minutes } = getHoursAndMinutes(duration);\n  return hours > 0 ? `${hours}h ${minutes}m` : `${minutes}m`;\n};\n\nexport const formatStarring = (starring: string[]): string => {\n  if (starring.length > 4) {\n    return `${starring.slice(0, 4).join(', ')} and other`;\n  }\n\n  return starring.join(', ');\n};\n\nexport const formatReviewDate = (date: Date | string): string => {\n  if (typeof date === 'string') {\n    date = new Date(date);\n  }\n\n  const month = date.getMonth();\n  const day = date.getDate();\n  const year = date.getFullYear();\n\n  return `${months[month]} ${day}, ${year}`;\n};\n\nexport const isCheckedAuth = (authorizationStatus: AuthorizationStatus): boolean =>\n  authorizationStatus === AuthorizationStatus.Unknown;\n","import { getFormatedDuration } from '../../utils';\nimport { Film } from '../../types/film';\n\ntype TabDetailsProps = {\n  film: Film;\n}\n\nfunction TabDetails({ film }: TabDetailsProps): JSX.Element {\n  return (\n    <div className=\"film-card__text film-card__row\">\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Director</strong>\n          <span className=\"film-card__details-value\">{film.director}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Starring</strong>\n          <span className=\"film-card__details-value\">\n            {film.starring.join(',#').split('#').map((it) => <span key={it}>{it} </span>)}\n          </span>\n        </p>\n      </div>\n      <div className=\"film-card__text-col\">\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Run Time</strong>\n          <span className=\"film-card__details-value\">{getFormatedDuration(film.runTime)}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Genre</strong>\n          <span className=\"film-card__details-value\">{film.genre}</span>\n        </p>\n        <p className=\"film-card__details-item\">\n          <strong className=\"film-card__details-name\">Released</strong>\n          <span className=\"film-card__details-value\">{film.released}</span>\n        </p>\n      </div>\n    </div>);\n}\n\nexport default TabDetails;\n","import { formatStarring } from '../../utils';\nimport { Film } from '../../types/film';\nimport { useMemo } from 'react';\n\ntype TabOverviewProps = {\n  film: Film;\n}\n\nfunction TabOverview({ film }: TabOverviewProps): JSX.Element {\n  const levelDescription = useMemo(() => {\n    if (film.rating < 3) {\n      return 'Bad';\n    }\n    if (film.rating < 5) {\n      return 'Normal';\n    }\n    if (film.rating < 8) {\n      return 'Good';\n    }\n    if (film.rating < 10) {\n      return 'Very good';\n    }\n    return 'Awesome';\n  }, [film.rating]);\n  return (\n    <>\n      <div className=\"film-rating\">\n        <div className=\"film-rating__score\">{film.rating}</div>\n        <p className=\"film-rating__meta\">\n          <span className=\"film-rating__level\">{levelDescription}</span>\n          <span className=\"film-rating__count\">{film.scoresCount} ratings</span>\n        </p>\n      </div>\n\n      <div className=\"film-card__text\">\n        <p>{film.description}</p>\n\n        <p className=\"film-card__director\"><strong>Director: {film.director}</strong></p>\n        <p className=\"film-card__starring\"><strong>Starring: {formatStarring(film.starring)}</strong></p>\n      </div>\n    </>);\n}\n\nexport default TabOverview;\n","import { Reviews } from '../../types/review';\nimport { formatReviewDate } from '../../utils';\n\ntype TabReviewProps = {\n  reviews: Reviews;\n}\n\nfunction TabReviews({ reviews }: TabReviewProps): JSX.Element {\n  const middleIndex = Math.round(reviews.length / 2);\n  const firstBlockReviews = reviews.slice(0, middleIndex);\n  const secondBlockReviews = reviews.slice(middleIndex);\n\n  return (\n    <div className=\"film-card__reviews film-card__row\">\n      <div className=\"film-card__reviews-col\">\n        {firstBlockReviews.map((it) => (\n          <div key={it.id} className=\"review\">\n            <blockquote className=\"review__quote\">\n              <p className=\"review__text\">{it.comment}</p>\n\n              <footer className=\"review__details\">\n                <cite className=\"review__author\">{it.user.name}</cite>\n                <time className=\"review__date\" dateTime={it.date}>{formatReviewDate(it.date)}</time>\n              </footer>\n            </blockquote>\n\n            <div className=\"review__rating\">{it.rating}</div>\n          </div>))}\n      </div>\n      <div className=\"film-card__reviews-col\">\n        {secondBlockReviews.map((it) => (\n          <div key={it.id} className=\"review\">\n            <blockquote className=\"review__quote\">\n              <p className=\"review__text\">{it.comment}</p>\n\n              <footer className=\"review__details\">\n                <cite className=\"review__author\">{it.user.name}</cite>\n                <time className=\"review__date\" dateTime={it.date}>{formatReviewDate(it.date)}</time>\n              </footer>\n            </blockquote>\n\n            <div className=\"review__rating\">{it.rating}</div>\n          </div>))}\n      </div>\n    </div>\n  );\n}\n\nexport default TabReviews;\n","import { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Film } from '../../types/film';\nimport { Reviews } from '../../types/review';\nimport TabDetails from '../tab-details/tab-details';\nimport TabOverview from '../tab-overview/tab-overview';\nimport TabReviews from '../tab-reviews/tab-reviews';\n\ntype TabsProps = {\n  film: Film;\n  reviews: Reviews;\n}\n\ntype PossibleTabs = '#overview' | '#details' | '#reviews';\n\nfunction Tabs({ film, reviews }: TabsProps): JSX.Element {\n  const location = useLocation();\n  const currentTab: PossibleTabs = location.hash as PossibleTabs || '#overview';\n\n  const getTab = () => {\n    switch (currentTab) {\n      case '#overview':\n        return <TabOverview film={film} />;\n      case '#details':\n        return <TabDetails film={film} />;\n      case '#reviews':\n        return <TabReviews reviews={reviews} />;\n    }\n  };\n\n  return (\n    <div className=\"film-card__desc\">\n      <nav className=\"film-nav film-card__nav\">\n        <ul className=\"film-nav__list\">\n          <li className={`film-nav__item${currentTab === '#overview' ? ' film-nav__item--active' : ''}`}>\n            <Link to={`${location.pathname}#overview`} className=\"film-nav__link\">Overview</Link>\n          </li>\n          <li className={`film-nav__item${currentTab === '#details' ? ' film-nav__item--active' : ''}`}>\n            <Link to={`${location.pathname}#details`} className=\"film-nav__link\">Details</Link>\n          </li>\n          <li className={`film-nav__item${currentTab === '#reviews' ? ' film-nav__item--active' : ''}`}>\n            <Link to={`${location.pathname}#reviews`} className=\"film-nav__link\">Reviews</Link>\n          </li>\n        </ul>\n      </nav>\n\n      {getTab()}\n    </div>\n  );\n}\n\nexport default Tabs;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { AuthorizationStatus, FILMS_PER_STEP } from '../../const';\nimport { changeShowedFilms } from '../../store/action';\nimport { fetchFilmAction, fetchReviewsAction, fethcSimilarFilmsAction } from '../../store/api-actions';\nimport { getFilm, getReviews, getSimilarFilms } from '../../store/films-data/selectors';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\nimport FilmsList from '../films-list/films-list';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport Logo from '../logo/logo';\nimport MyListButton from '../my-list-button/my-list-button';\nimport Tabs from '../tabs/tabs';\nimport ToPlayerButton from '../to-player-button/to-player-button';\nimport UserBlock from '../user-block/user-block';\n\nfunction MoviePage(): JSX.Element {\n  const id = parseInt(useParams<{ id: string }>().id, 10);\n\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const film = useSelector(getFilm);\n  const reviews = useSelector(getReviews);\n  const similarFilms = useSelector(getSimilarFilms);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && id !== film?.id) {\n      dispatch(fetchFilmAction(id));\n      dispatch(fethcSimilarFilmsAction(id));\n      dispatch(fetchReviewsAction(id));\n    }\n  }, [dispatch, id, film?.id]);\n\n  useEffect(() => {\n    dispatch(changeShowedFilms(FILMS_PER_STEP));\n  }, [dispatch, id]);\n\n  if (!film) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (<>\n    <section className=\"film-card film-card--full\">\n      <div className=\"film-card__hero\">\n        <div className=\"film-card__bg\">\n          <img src={film.backgroundImage} alt={film.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header film-card__head\">\n          <Logo />\n\n          <UserBlock />\n        </header>\n\n        <div className=\"film-card__wrap\">\n          <div className=\"film-card__desc\">\n            <h2 className=\"film-card__title\">{film.name}</h2>\n            <p className=\"film-card__meta\">\n              <span className=\"film-card__genre\">{film.genre}</span>\n              <span className=\"film-card__year\">{film.released}</span>\n            </p>\n\n            <div className=\"film-card__buttons\">\n              <ToPlayerButton filmId={film.id} />\n              <MyListButton film={film} />\n\n              {authorizationStatus === AuthorizationStatus.Auth && <Link to={`/films/${id}/review`} className=\"btn film-card__button\">Add review</Link>}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"film-card__wrap film-card__translate-top\">\n        <div className=\"film-card__info\">\n          <div className=\"film-card__poster film-card__poster--big\">\n            <img src={film.posterImage} alt={film.name} width=\"218\" height=\"327\" />\n          </div>\n          <Tabs film={film} reviews={reviews}></Tabs>\n        </div>\n      </div>\n    </section>\n\n    <div className=\"page-content\">\n      <FilmsList className=\"catalog--like-this\" title=\"More like this\" films={similarFilms} />\n\n      <footer className=\"page-footer\">\n        <Logo isCenter />\n\n        <div className=\"copyright\">\n          <p>© 2019 What to watch Ltd.</p>\n        </div>\n      </footer>\n    </div></>\n  );\n}\n\nexport default MoviePage;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { FormEvent, useMemo, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addReviewAction } from '../../store/api-actions';\n\nconst MIN_COMMENT_LENGTH = 50;\nconst MAX_COMMENT_LENGTH = 400;\n\ntype AddReviewFormProps = {\n  filmId: number;\n};\n\nexport default function AddReviewForm({ filmId }: AddReviewFormProps): JSX.Element {\n  const [rating, setRating] = useState(5);\n  const [comment, setComment] = useState('');\n\n  const addReviewBtnRef = useRef<HTMLButtonElement>(null);\n\n  const dispatch = useDispatch();\n\n  const isFormValid = useMemo(() => rating > 0 && comment.length >= MIN_COMMENT_LENGTH && comment.length <= MAX_COMMENT_LENGTH, [rating, comment]);\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    if (isFormValid) {\n      if (addReviewBtnRef.current) {\n        addReviewBtnRef.current.disabled = true;\n      }\n      dispatch(addReviewAction(filmId, {\n        rating,\n        comment,\n      }, (isSuccess) => {\n        if (isSuccess) {\n          setRating(5);\n          setComment('');\n        } else {\n          if (addReviewBtnRef.current) {\n            addReviewBtnRef.current.disabled = false;\n          }\n        }\n      }));\n    }\n  };\n\n  return (\n    <div className=\"add-review\">\n      <form action=\"#\" className=\"add-review__form\" onSubmit={handleSubmit}>\n        <div className=\"rating\">\n          <div className=\"rating__stars\">\n            {Array.from({ length: 10 }, (_, i) => i + 1).reverse().map((it) => (\n              [\n                <input key={`input-${it}`} className=\"rating__input\" id={`star-${it}`} type=\"radio\" name=\"rating\" value={it} checked={rating === it} onChange={() => setRating(it)} />,\n                <label key={`label-${it}`} className=\"rating__label\" htmlFor={`star-${it}`}>Rating {it}</label>,\n              ]\n            ))}\n          </div>\n        </div>\n\n        <div className=\"add-review__text\">\n          <textarea className=\"add-review__textarea\" placeholder=\"Review text\" maxLength={MAX_COMMENT_LENGTH} value={comment} onChange={(evt) => setComment(evt.target.value)}></textarea>\n          <div className=\"add-review__submit\">\n            <button ref={addReviewBtnRef} className=\"add-review__btn\" type=\"submit\" disabled={!isFormValid}>Post</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { AppRoute, CreateAppRoute } from '../../routes';\nimport { fetchFilmAction } from '../../store/api-actions';\nimport { getFilm } from '../../store/films-data/selectors';\nimport AddReviewForm from '../add-review-form/add-review-form';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport Logo from '../logo/logo';\nimport UserBlock from '../user-block/user-block';\n\nfunction AddReview(): JSX.Element {\n  const id = parseInt(useParams<{ id: string }>().id, 10);\n  const film = useSelector(getFilm);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && id !== film?.id) {\n      dispatch(fetchFilmAction(id));\n    }\n  }, [dispatch, id, film?.id]);\n\n  if (!film) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <section className=\"film-card film-card--full\">\n      <div className=\"film-card__header\">\n        <div className=\"film-card__bg\">\n          <img src={film.backgroundImage} alt={film.name} />\n        </div>\n\n        <h1 className=\"visually-hidden\">WTW</h1>\n\n        <header className=\"page-header\">\n          <Logo />\n\n          <nav className=\"breadcrumbs\">\n            <ul className=\"breadcrumbs__list\">\n              <li className=\"breadcrumbs__item\">\n                <Link className=\"breadcrumbs__link\" to={CreateAppRoute[AppRoute.Film](id)}>{film.name}</Link>\n              </li>\n              <li className=\"breadcrumbs__item\">\n                <span className=\"breadcrumbs__link\">Add review</span>\n              </li>\n            </ul>\n          </nav>\n\n          <UserBlock />\n        </header>\n\n        <div className=\"film-card__poster film-card__poster--small\">\n          <img src={film.posterImage} alt={film.name} width=\"218\" height=\"327\" />\n        </div>\n      </div>\n\n      <AddReviewForm filmId={film.id} />\n\n    </section>\n  );\n}\n\nexport default AddReview;\n","import { useState, useEffect, MutableRefObject } from 'react';\n\ntype PlayerState = {\n  isPlaying: boolean;\n  progress: number;\n  timeElapsed: number;\n}\n\ntype useVideoPlayerState = {\n  playerState: PlayerState;\n  togglePlay: () => void;\n  handleOnTimeUpdate: () => void;\n  handleVideoProgress: (manualChange: number) => void;\n  requestFullscreen: () => void;\n}\n\nconst useVideoPlayer = (videoElement: MutableRefObject<HTMLVideoElement | null>): useVideoPlayerState => {\n  const [playerState, setPlayerState] = useState({\n    isPlaying: false,\n    progress: 0,\n    timeElapsed: 0,\n  } as PlayerState);\n\n  const togglePlay = () => {\n    setPlayerState({\n      ...playerState,\n      isPlaying: !playerState.isPlaying,\n    });\n  };\n\n  useEffect(() => {\n    playerState.isPlaying\n      ? videoElement?.current?.play()\n      : videoElement?.current?.pause();\n  }, [playerState.isPlaying, videoElement]);\n\n  const handleOnTimeUpdate = () => {\n    if (videoElement?.current) {\n      const progress = (videoElement.current.currentTime / videoElement.current.duration) * 100;\n      const timeElapsed = videoElement.current.duration -  videoElement.current.currentTime;\n      setPlayerState({\n        ...playerState,\n        progress,\n        timeElapsed,\n      });\n    }\n  };\n\n  const handleVideoProgress = (manualChange: number) => {\n    if (videoElement?.current) {\n      videoElement.current.currentTime = (videoElement.current.duration / 100) * manualChange;\n      const timeElapsed = videoElement.current.duration -  videoElement.current.currentTime;\n      setPlayerState({\n        ...playerState,\n        progress: manualChange,\n        timeElapsed,\n      });\n    }\n  };\n\n  const requestFullscreen = ()=>{\n    videoElement.current?.requestFullscreen();\n  };\n\n  return {\n    playerState,\n    togglePlay,\n    handleOnTimeUpdate,\n    handleVideoProgress,\n    requestFullscreen,\n  };\n};\n\nexport default useVideoPlayer;\n","import { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport useVideoPlayer from '../../hooks/use-video-player';\nimport { AppRoute, CreateAppRoute } from '../../routes';\nimport { redirectToRoute } from '../../store/action';\nimport { fetchFilmAction } from '../../store/api-actions';\nimport { getFilm } from '../../store/films-data/selectors';\nimport { formatDuration } from '../../utils';\nimport LoadingScreen from '../loading-screen/loading-screen';\n\nfunction PlayerPage(): JSX.Element {\n  const id = parseInt(useParams<{ id: string }>().id, 10);\n  const film = useSelector(getFilm);\n\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n\n  const {\n    playerState,\n    togglePlay,\n    requestFullscreen,\n    handleOnTimeUpdate,\n    handleVideoProgress,\n  } = useVideoPlayer(videoRef);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (id && id !== film?.id) {\n      dispatch(fetchFilmAction(id));\n    }\n  }, [dispatch, id, film?.id]);\n\n  if (!film) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <div className=\"player\">\n      <video className=\"player__video\" poster={film.previewImage} ref={videoRef} onTimeUpdate={handleOnTimeUpdate}>\n        <source src={film.videoLink}></source>\n      </video>\n\n      <button type=\"button\" className=\"player__exit\" onClick={() => {\n        dispatch(redirectToRoute(CreateAppRoute[AppRoute.Film](id)));\n      }}\n      >\n        Exit\n      </button>\n\n      <div className=\"player__controls\">\n        <div className=\"player__controls-row\">\n          <div className=\"player__time\" onClick={(evt) => {\n            const offsetX = evt.clientX - evt.currentTarget.offsetLeft;\n            const totalWidth = evt.currentTarget.clientWidth;\n            const change = Math.floor(offsetX / totalWidth * 100);\n            handleVideoProgress(change);\n          }}\n          >\n            <progress className=\"player__progress\" value={playerState.progress} max=\"100\">\n            </progress>\n            <div className=\"player__toggler\" style={{ left: `${playerState.progress}%` }}>Toggler</div>\n          </div>\n          <div className=\"player__time-value\">{formatDuration(playerState.timeElapsed)}</div>\n        </div>\n\n        <div className=\"player__controls-row\">\n          <button type=\"button\" className=\"player__play\" onClick={() => togglePlay()}>\n            <svg viewBox=\"0 0 19 19\" width=\"19\" height=\"19\">\n              <use xlinkHref={playerState.isPlaying ? '#pause' : '#play-s'}></use>\n            </svg>\n            <span>{playerState.isPlaying ? 'Pause' : 'Play'}</span>\n          </button>\n          <div className=\"player__name\">{film.name}</div>\n\n          <button type=\"button\" className=\"player__full-screen\" onClick={() => requestFullscreen()}>\n            <svg viewBox=\"0 0 27 27\" width=\"27\" height=\"27\">\n              <use xlinkHref=\"#full-screen\"></use>\n            </svg>\n            <span>Full screen</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PlayerPage;\n","import { Link } from 'react-router-dom';\nimport './not-found.css';\n\nfunction NotFound(): JSX.Element {\n  return (\n    <>\n      <Link className=\"link-return-url\" to=\"/\">Return to main</Link>\n      <div className=\"flex-center position-r full-height\">\n        <div className=\"code\">404</div>\n        <div className=\"message\" style={{ padding: '10px' }}>NOT FOUND</div>\n      </div>\n    </>\n  );\n}\n\nexport default NotFound;\n","import { useSelector } from 'react-redux';\nimport { History } from 'history';\nimport { Route, Redirect } from 'react-router-dom';\nimport { RouteProps } from 'react-router-dom';\nimport { AuthorizationStatus } from '../../const';\nimport { AppRoute } from '../../routes';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\n\ntype RenderFuncProps = {\n  history: History<unknown>;\n}\n\ntype PrivateRouteProps = RouteProps & {\n  render: (props: RenderFuncProps) => JSX.Element;\n}\n\nfunction PrivateRoute(props: PrivateRouteProps): JSX.Element {\n  const { exact, path, render } = props;\n\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={(routeProps) => (\n        authorizationStatus === AuthorizationStatus.Auth\n          ? render(routeProps)\n          : <Redirect to={AppRoute.Login} />\n      )}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import { Switch, Route } from 'react-router-dom';\nimport { AppRoute } from '../../routes';\nimport Main from '../main/main';\nimport SignIn from '../sign-in/sign-in';\nimport MyList from '../my-list/my-list';\nimport MoviePage from '../movie-page/movie-page';\nimport AddReview from '../add-review/add-review';\nimport PlayerPage from '../player-page/player-page';\nimport NotFound from '../not-found/not-found';\nimport PrivateRoute from '../private-route/private-route';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport { isCheckedAuth } from '../../utils';\nimport { useSelector } from 'react-redux';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\n\nfunction App(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  if (isCheckedAuth(authorizationStatus)) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <Switch>\n      <Route exact path={AppRoute.Root}>\n        <Main />\n      </Route>\n      <Route exact path={AppRoute.Login}>\n        <SignIn />\n      </Route>\n      <PrivateRoute exact path={AppRoute.MyList} render={() => <MyList />}></PrivateRoute>\n      <Route exact path={AppRoute.Film}>\n        <MoviePage />\n      </Route>\n      <PrivateRoute exact path={AppRoute.AddReview} render={() => <AddReview />}></PrivateRoute>\n      <Route exact path={AppRoute.Player}>\n        <PlayerPage />\n      </Route>\n      <Route exact path={AppRoute.NotFound}>\n        <NotFound />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\nimport { getToken } from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/wtw';\nconst REQUEST_TIMEOUT = 5000;\n\nenum HttpCode {\n  Unauthorized = 401,\n  NotFound = 404\n}\n\ntype UnauthorizedCallback = () => void;\ntype NotFoundCallback = () => void;\n\nexport const createAPI = (onUnauthorized: UnauthorizedCallback, notFoundCallback: NotFoundCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const { response } = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        return onUnauthorized();\n      }\n\n      if (response?.status === HttpCode.NotFound) {\n        notFoundCallback();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  return api;\n};\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import browserHistory from '../../browser-history';\nimport { Middleware } from 'redux';\nimport { State } from '../../types/state';\nimport { ActionType } from '../../types/action';\n\nexport const redirect: Middleware<unknown, State> =\n  (_store) =>\n    (next) =>\n      (action) => {\n\n        if (action.type === ActionType.RedirectToRoute) {\n          browserHistory.push(action.payload);\n        }\n\n        return next(action);\n      };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router as BrowserRouter } from 'react-router-dom';\nimport App from './components/app/app';\nimport { createAPI } from './services/api';\nimport { redirectToRoute, requireAuthorization } from './store/action';\nimport { AuthorizationStatus } from './const';\nimport { checkAuthAction } from './store/api-actions';\nimport { redirect } from './store/middlewares/redirect';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { AppRoute } from './routes';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { rootReducer } from './store/root-reducer';\nimport browserHistory from './browser-history';\n\nconst api = createAPI(\n  () => store.dispatch(requireAuthorization(AuthorizationStatus.NoAuth)),\n  () => store.dispatch(redirectToRoute(AppRoute.NotFound)),\n);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\nstore.dispatch(checkAuthAction());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter history={browserHistory}>\n        <ToastContainer />\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}